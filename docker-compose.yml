version: '3'
services:
  # service configuration for our database
  database:

    # use the preferred version of the official Postgres image
    # see https://hub.docker.com/_/postgres/
    image: postgres:9.4.5

    # persist the database between containers by storing it in a volume
    volumes:
      - consul2-postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=consul
      - POSTGRES_USER=consul
      - POSTGRES_PASSWORD=kAQssRKb2E4Rg888

  # service configuration for our dockerized Rails app
  consul:

    # use the Dockerfile next to this file
    build: .
    entrypoint: /usr/local/bin/entrypoint.sh
    command: bundle exec rails s -p 3000 -b '0.0.0.0'
    working_dir: /var/www/consul

    # rely on the RAILS_ENV value of the host machine
    environment:
      RAILS_ENV: development
      NEW_RELIC_AGENT_ENABLED: "false"
      SECRET_KEY_BASE: 709d8f336a2baecfd8fcc243129ebaffc660ada0125ccc644fe29e0f0f289a0397dff1108e6fc43c3e84ae3ad600f55e03f06028719c6f3c8b8acb887a7fcb24

    # makes the app container aware of the DB container
    depends_on:
      - database

    # expose the port we configured Unicorn to bind to
    ports:
      - "3002:3000"
    # map our application source code, in full, to the application root of our container
    volumes:
      - .:/var/www/consul:delegated
      - bundle:/usr/local/bundle:delegated
volumes:
  consul2-postgres: {}
  bundle: {}
